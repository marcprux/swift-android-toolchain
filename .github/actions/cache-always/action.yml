name: 'Cache Always'
description: 'Cache artifacts like dependencies and build outputs to improve workflow execution time'

inputs:
  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore'
    required: true
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.'
    required: false
  upload-chunk-size:
    description: 'The chunk size used to split up large files during upload, in bytes'
    required: false

outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    # Instead of running `actions/cache@v3` directly, check it out locally.
    - name: Checkout actions/cache@v3
      uses: actions/checkout@v3
      with:
        repository: actions/cache
        ref: v3
        path: ./.github/.tmp/cache-always/actions/cache

    - name: Make actions/cache@v3 run always, not only when job succeeds
      # Tweak `action.yml` of `actions/cache@v3` to remove its `post-if`
      # condition, making it default to `post-if: always()`.
      run: |
        sed -i -e "/post-if:/d" ./.github/.tmp/cache-always/actions/cache/action.yml
      shell: bash

    - name: Cache
      id: cache
      uses: ./.github/.tmp/cache-always/actions/cache
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}
        upload-chunk-size: ${{ inputs.upload-chunk-size }}
